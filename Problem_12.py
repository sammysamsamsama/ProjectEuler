# The sequence of triangle numbers is generated by adding the natural numbers.
# So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
# Let us list the factors of the first seven triangle numbers:
# 1: 1
# 3: 1,3
# 6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
# What is the value of the first triangle number to have over five hundred divisors?
import math


def triangle_number(div):
    step = 0
    candidate = 0
    divs = 0
    while divs < div:
        step += 1
        candidate += step
        divs = 0
        for i in range(1, int(math.sqrt(candidate))):
            if candidate % i == 0:
                divs += 2
        if candidate % int(math.sqrt(candidate)) == 0:
            divs += 1
    return candidate


print('5\t' + str(triangle_number(5)))
print('10\t' + str(triangle_number(10)))
print('50\t' + str(triangle_number(50)))
print('100\t' + str(triangle_number(100)))
print('500\t' + str(triangle_number(500)))
